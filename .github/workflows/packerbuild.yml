name: Packer Build Custom Image
 
on:
  pull_request:
   types: [closed]
 
jobs:
  packer_init_validate_build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    env:
      DATABASE: webappDB
      DATABASE_URL: ${{secrets.DATABASE_URL}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
    
    steps:
      - name: Checkout code from branch
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
 
      - name: Zip all the webApp files
        run: |
          zip -r webapp.zip ./
          pwd
      - name: check the current
        run: ls -la

      - name: Setup google config
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS}}

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'webappDB'
          mysql user: 'web-app'
          mysql password: '${{ secrets.DATABASE_PASSWORD }}'

      - name: Build with Maven
        run: |
          mvn -B package --file pom.xml

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"
 
      - name: Run `packer init`
        id: init
        run: packer init .

      - name: Packer build
        id: build
        run: packer build main.pkr.hcl

      - name: Create new instance template version
        run: |
          latest_image=$(gcloud compute images list --filter="family=[IMAGE_FAMILY]" --format="value(ID)")
          gcloud compute instance-templates create [NEW_TEMPLATE_NAME] --source-instance-template [EXISTING_TEMPLATE_NAME] --image=$latest_image --description="New template version with latest machine image" --region=[REGION]

      - name: Configure instance group with new template
        run: |
          gcloud compute instance-groups managed set-instance-template [INSTANCE_GROUP_NAME] --template=[NEW_TEMPLATE_NAME] --zone=[ZONE]

      - name: Start rolling update
        run: |
          gcloud compute instance-groups managed rolling-action start-update [INSTANCE_GROUP_NAME] --zone=[ZONE]

      - name: Monitor instance group update
        run: |
          status="RUNNING"
          while [ "$status" != "ROLLOUT_DONE" ]; do
          status=$(gcloud compute instance-groups managed describe [INSTANCE_GROUP_NAME] --zone=[ZONE] --format='value(instanceGroupStatus.versionTarget.utilizationTarget)')
          sleep 10
          done
        

  
     
     